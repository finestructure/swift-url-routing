{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvvoov\/erasetoanyparserprinter()"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVOOV","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVOOV\/ParserPrinter-Implementations"]]},"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","type":"reference","isActive":true},{"type":"text","text":" wrapping this parser-printer."}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"text":"type erasure","type":"text"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When you expose your composed parser-printers as the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","type":"reference","isActive":true},{"text":" type, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying implementation over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)"},{"text":".","type":"text"}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"title":"eraseToAnyParserPrinter()","externalID":"s:7Parsing13ParserPrinterPAAE010eraseToAnybC0AA0fbC0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipVVOOVV","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"Parsing"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVOOV\/eraseToAnyParserPrinter()"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/anyparserprinter","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"code":"Input","type":"codeVoice"},{"type":"text","text":"."}],"title":"AnyParserPrinter","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipVVOOV":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVOOV","navigatorTitle":[{"text":"ZipVVOOV","kind":"identifier"}],"abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVOOV","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvvoov","type":"topic","title":"ParserBuilder.ZipVVOOV","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/init(_:)":{"role":"symbol","type":"topic","title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipVVOOV/eraseToAnyParserPrinter()":{"kind":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvoov\/erasetoanyparserprinter()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"eraseToAnyParserPrinter()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVOOV\/eraseToAnyParserPrinter()"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder":{"type":"topic","url":"\/documentation\/parsing\/parserbuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","role":"symbol","title":"ParserBuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipVVOOV/ParserPrinter-Implementations":{"kind":"article","abstract":[],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvoov\/parserprinter-implementations","role":"collectionGroup","title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVOOV\/ParserPrinter-Implementations"}}}