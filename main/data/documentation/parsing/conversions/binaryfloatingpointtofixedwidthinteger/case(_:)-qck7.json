{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Conversion.case(_:)"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger\/case(_:)-qck7","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger\/Conversion-Implementations"]]},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd__ytGqd__AHRszlFZ::SYNTHESIZED::s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","extendedModule":"Parsing","role":"symbol","title":"case(_:)","modules":[{"name":"Parsing"}],"symbolKind":"method","roleHeading":"Type Method"},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger\/case(_:)-qck7"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initializer"},{"text":": ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions":{"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","kind":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BinaryFloatingPointToFixedWidthInteger/Conversion-Implementations":{"type":"topic","title":"Conversion Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger\/Conversion-Implementations","abstract":[],"kind":"article","url":"\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger\/conversion-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BinaryFloatingPointToFixedWidthInteger":{"role":"symbol","kind":"symbol","abstract":[{"text":"A conversion from a ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" to an ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryFloatingPointToFixedWidthInteger"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","navigatorTitle":[{"kind":"identifier","text":"BinaryFloatingPointToFixedWidthInteger"}],"url":"\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger","type":"topic","title":"Conversions.BinaryFloatingPointToFixedWidthInteger"},"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath":{"role":"symbol","abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded"},{"type":"text","text":" "},{"type":"text","text":"value."}],"url":"\/documentation\/casepaths\/casepath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"type":"topic","title":"CasePath","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CasePath"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BinaryFloatingPointToFixedWidthInteger/case(_:)-qck7":{"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger\/case(_:)-qck7","title":"case(_:)","url":"\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger\/case(_:)-qck7","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"}}}