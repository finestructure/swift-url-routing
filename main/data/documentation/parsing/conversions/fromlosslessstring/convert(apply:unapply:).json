{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/convert(apply:unapply:)"},"variants":[{"paths":["\/documentation\/parsing\/conversions\/fromlosslessstring\/convert(apply:unapply:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations"]]},"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Type Method","extendedModule":"Parsing","externalID":"s:7Parsing10ConversionPAAE7convert5apply7unapplyAA03AnyB0Vyqd__qd_0_Gqd_0_Sgqd__c_qd__Sgqd_0_ctAIRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO18FromLosslessStringV","role":"symbol","symbolKind":"method","title":"convert(apply:unapply:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:7Parsing13AnyConversionV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","text":"AnyConversion","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"apply","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to convert an input into an output. "},{"code":"apply","type":"codeVoice"},{"type":"text","text":" is executed"},{"type":"text","text":" "},{"type":"text","text":"each time the "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/apply(_:)","type":"reference"},{"type":"text","text":" method is called on the resulting conversion. If the closure"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", an error is thrown. Otherwise, the value is unwrapped."}]}]},{"name":"unapply","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to convert an output into an input. ","type":"text"},{"code":"unapply","type":"codeVoice"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/unapply(_:)","type":"reference","isActive":true},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Useful for experimenting with conversions in a lightweight manner, without the ceremony of"},{"type":"text","text":" "},{"type":"text","text":"defining a dedicated type."}],"type":"paragraph"},{"code":["struct Amount {","  var cents: Int","}","","let amount = Parse(","  .convert(","    apply: { dollars, cents in Amount(cents: dollars * 100 + cents) },","    unapply: { amount in amount.cents.quotientAndRemainder(dividingBy: 100) }","  )",") {","  Digits()","  \".\"","  Digits(2)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If performance is a concern, you should define a custom type that conforms to ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"instead, which avoids the overhead of escaping closures, gives the compiler the ability to","type":"text"},{"text":" ","type":"text"},{"text":"better optimize, and puts your in a better position to test the conversion.","type":"text"}],"type":"paragraph"},{"code":["struct AmountConversion: Conversion {","  func apply(_ dollarsAndCents: (Int, Int)) -> Amount {","    return Amount(cents: dollarsAndCents.0 * 100 + dollarsAndCents.1)","  }","","  func unapply(_ amount: Amount) -> (Int, Int) {","    amount.cents.quotientAndRemainder(dividingBy: 100)","  }","}","","let amount = Parse(AmountConversion()) {","  Digits()","  \".\"","  Digits(2)","}"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/FromLosslessString/Conversion-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations","title":"Conversion Implementations","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/conversion-implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/FromLosslessString/convert(apply:unapply:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/convert(apply:unapply:)","type":"topic","title":"convert(apply:unapply:)","abstract":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/convert(apply:unapply:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/FromLosslessString":{"title":"Conversions.FromLosslessString","type":"topic","url":"\/documentation\/parsing\/conversions\/fromlosslessstring","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString","abstract":[{"text":"A conversion from a string to a lossless string-convertible type.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FromLosslessString"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromLosslessString"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion":{"navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","url":"\/documentation\/parsing\/anyconversion","abstract":[{"text":"A type-erased ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true},{"text":".","type":"text"}],"title":"AnyConversion"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/FromLosslessString/apply(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"title":"apply(_:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/apply(_:)","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/apply(_:)","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/FromLosslessString/unapply(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"unapply(_:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromLosslessString\/unapply(_:)","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions":{"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","kind":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","url":"\/documentation\/parsing\/conversion","role":"symbol","title":"Conversion","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}]}}}