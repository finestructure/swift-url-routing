{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/wrapped"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"externalID":"s:7Parsing10OptionallyV","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"roleHeading":"Structure","title":"Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"modules":[{"name":"Parsing"}],"symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/optionally"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this parser when you are parsing into an output data model that contains "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"When the wrapped parser fails ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally"},{"text":" will backtrack any consumption of the input so","type":"text"},{"text":" ","type":"text"},{"text":"that later parsers can attempt to parser the input:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let parser = Parse {","  \"Hello,\"","  Optionally { \" \"; Bool.parser() }","  \" world!\"","}","","try parser.parse(\"Hello, world!\")      \/\/ nil 1️⃣","try parser.parse(\"Hello, true world!\") \/\/ true"]},{"inlineContent":[{"text":"If ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","type":"reference"},{"text":" did not backtrack then 1️⃣ would fail because it would consume a space,","type":"text"},{"text":" ","type":"text"},{"text":"causing the ","type":"text"},{"code":"\" world!\"","type":"codeVoice"},{"text":" parser to fail since there is no longer any space to consume.","type":"text"},{"text":" ","type":"text"},{"text":"Read the article ","type":"text"},{"text":"doc:Backtracking","type":"text"},{"text":" to learn more about how backtracking works.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If you are optionally parsing input that should coalesce into some default, you can skip the","type":"text"},{"text":" ","type":"text"},{"text":"optionality and instead use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)"},{"text":" with a default:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Optionally { Int.parser() }","  .map { $0 ?? 0 }","","\/\/ vs.","","Int.parser()","  .replaceError(with: 0)"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it fails."}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/wrapped":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapped"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/wrapped","url":"\/documentation\/parsing\/optionally\/wrapped","type":"topic","title":"wrapped","abstract":[],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/parse(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/parse(_:)","url":"\/documentation\/parsing\/optionally\/parse(_:)","type":"topic","title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/replaceError(with:)":{"kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"replaceError(with:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","role":"symbol","url":"\/documentation\/parsing\/optionally\/replaceerror(with:)","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/init(_:)":{"abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/optionally\/init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/init(_:)","role":"symbol","title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/Parser-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","type":"topic","title":"Parser Implementations","url":"\/documentation\/parsing\/optionally\/parser-implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/ParserPrinter-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/parsing\/optionally\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Optionally"}],"role":"symbol","url":"\/documentation\/parsing\/optionally","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optionally"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","title":"Optionally","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","role":"symbol","type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}]}}}