{"kind":"symbol","metadata":{"roleHeading":"Structure","title":"StartsWith","symbolKind":"struct","role":"symbol","externalID":"s:7Parsing10StartsWithV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"modules":[{"name":"Parsing"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/startswith"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:by:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/count","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/possiblePrefix","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/startsWith"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/ParserPrinter-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StartsWith","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.starts(with:)"},{"type":"text","text":", and tests that the input it is parsing"},{"type":"text","text":" "},{"type":"text","text":"starts with a given subsequence by calling this method under the hood."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", it consumes this prefix and returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["var input = \"Hello, Blob!\"[...]","","StartsWith(\"Hello, \").parse(&input)  \/\/ ()","input                                \/\/ \"Blob!\""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"false"},{"type":"text","text":", it fails and leaves input intact:"}],"type":"paragraph"},{"code":["var input = \"Goodnight, Blob!\"[...]","try StartsWith(\"Hello, \").parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | Goodnight, Blob!","\/\/   | ^ expected \"Hello, \""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This parser returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" and "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" the sequence of elements it consumes because the sequence"},{"text":" ","type":"text"},{"text":"is already known at the time the parser is created (it is the value quite literally passed to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:)","isActive":true,"type":"reference"},{"text":").","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In many circumstances you can omit the "},{"type":"codeVoice","code":"StartsWith"},{"type":"text","text":" parser entirely and just use the collection"},{"type":"text","text":" "},{"type":"text","text":"as the parser. For example:"}],"type":"paragraph"},{"code":["var input = \"Hello, Blob!\"[...]","","try \"Hello, \".parse(&input)  \/\/ ()","input                        \/\/ \"Blob!\""],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/parse(_:)","title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/startswith\/parse(_:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"type":"topic","title":"StartsWith","url":"\/documentation\/parsing\/startswith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"kind":"symbol","abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/init(_:)":{"url":"\/documentation\/parsing\/startswith\/init(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"title":"init(_:)","abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/ParserPrinter-Implementations","kind":"article","url":"\/documentation\/parsing\/startswith\/parserprinter-implementations","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/count":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/count","abstract":[],"title":"count","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/startswith\/count"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/possiblePrefix":{"type":"topic","url":"\/documentation\/parsing\/startswith\/possibleprefix","abstract":[],"role":"symbol","title":"possiblePrefix","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/possiblePrefix","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"possiblePrefix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyCollection","kind":"typeIdentifier","preciseIdentifier":"s:s13AnyCollectionV"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/startsWith":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/startsWith","abstract":[],"title":"startsWith","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startsWith","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/startswith\/startswith","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","role":"symbol","type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","url":"\/documentation\/parsing\/parserprinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/Parser-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/startswith\/parser-implementations","kind":"article","type":"topic","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/init(_:by:)":{"title":"init(_:by:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/startswith\/init(_:by:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:by:)","role":"symbol","abstract":[{"text":"Initializes a parser that successfully returns ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" when the initial elements of its input","type":"text"},{"text":" ","type":"text"},{"text":"are equivalent to the elements in another sequence, using the given predicate as the","type":"text"},{"text":" ","type":"text"},{"text":"equivalence test.","type":"text"}]}}}