{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This conversion forwards its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)"},{"type":"text","text":" methods to an arbitrary"},{"type":"text","text":" "},{"type":"text","text":"underlying conversion having the same "},{"code":"Input","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" types, hiding the specifics of the","type":"text"},{"text":" ","type":"text"},{"text":"underlying ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use "},{"code":"AnyConversion","type":"codeVoice"},{"type":"text","text":" to wrap a conversion whose type has details you don’t want to expose across"},{"type":"text","text":" "},{"type":"text","text":"API boundaries, such as different modules. When you use type erasure this way, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying conversion over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"code":"AnyConversion","type":"codeVoice"},{"type":"text","text":" can also be useful for experimenting with ad hoc conversions in a lightweight"},{"type":"text","text":" "},{"type":"text","text":"manner. One can avoid the upfront ceremony of defining a whole new type and instead create a"},{"type":"text","text":" "},{"type":"text","text":"“conformance” inline by specifying the "},{"code":"apply","type":"codeVoice"},{"type":"text","text":" and "},{"code":"unapply","type":"codeVoice"},{"type":"text","text":" functions directly"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Prefix { $0.isNumber }","  .map(","    AnyConversion(","      apply: { Int(String($0)) },","      unapply: { String($0)[...] {","    )","  )","","\/\/ vs.","","struct SubstringToInt: Conversion {","  func apply(_ input: Substring) throws -> Int {","    guard let int = Int(String(input)) else {","      struct ConvertingError: Error {}","      throw ConvertingError()","    }","    return int","  }","","  func unapply(_ output: Int) -> Substring {","    String(output)[...]","  }","}","","Prefix { $0.isNumber }","  .map(SubstringToInt())"]},{"inlineContent":[{"type":"text","text":"If performance is a consideration of your parser-printer, you should avoid "},{"type":"codeVoice","code":"AnyConversion"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"instead create custom types that conform to the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true},{"type":"text","text":" protocol."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"A type-erased "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference","isActive":true},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyconversion"]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"AnyConversion","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing13AnyConversionV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyConversion"}],"navigatorTitle":[{"kind":"identifier","text":"AnyConversion"}],"role":"symbol"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"],"kind":"relationships"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations"],"generated":true,"title":"Default Implementations"}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/init(_:)":{"role":"symbol","abstract":[{"text":"Creates a type-erasing conversion to wrap the given conversion.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/anyconversion\/init(_:)","title":"init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion":{"navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","url":"\/documentation\/parsing\/anyconversion","abstract":[{"text":"A type-erased ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true},{"text":".","type":"text"}],"title":"AnyConversion"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/init(apply:unapply:)":{"title":"init(apply:unapply:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)","role":"symbol","url":"\/documentation\/parsing\/anyconversion\/init(apply:unapply:)","type":"topic","abstract":[{"text":"Creates a conversion that wraps the given closures in its ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)","type":"reference"},{"text":" ","type":"text"},{"text":"methods, throwing an error when ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"apply","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?)"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/unapply(_:)":{"abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"title":"unapply(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)","url":"\/documentation\/parsing\/anyconversion\/unapply(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/apply(_:)":{"title":"apply(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","role":"symbol","url":"\/documentation\/parsing\/anyconversion\/apply(_:)","type":"topic","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","url":"\/documentation\/parsing\/conversion","role":"symbol","title":"Conversion","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/Conversion-Implementations":{"kind":"article","title":"Conversion Implementations","url":"\/documentation\/parsing\/anyconversion\/conversion-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations","type":"topic","role":"collectionGroup"}}}