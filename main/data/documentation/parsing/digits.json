{"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"units."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Digits"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Length"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"InputToBytes"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing13CountingRangeP","kind":"typeIdentifier","text":"CountingRange","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/CountingRange"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing10ConversionP","kind":"typeIdentifier","text":"Conversion","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4UTF8a","kind":"typeIdentifier","text":"UTF8"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","kind":"typeIdentifier","text":"CodeUnit"}],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"Useful for processing simple numbers into integers.","type":"text"}],"type":"paragraph"},{"code":["try Digits().parse(\"123\")  \/\/ 123"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"codeVoice","code":"Digits"},{"type":"text","text":" can be configured with a length of input to parse, making it a more surgical tool than"},{"type":"text","text":" "},{"type":"text","text":"doc:Int"},{"type":"text","text":" parsers, which will parse an entire number all at once."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, you may want to parse a "},{"code":"YYYYMMDD","type":"codeVoice"},{"type":"text","text":" date format. You could do so using "},{"code":"Digits","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["struct Date { var year, month, day: Int }","","Parse(Date.init(year:month:day:)) {","  Digits(4)","  Digits(2)","  Digits(2)","}",".parse(\"20220131\")  \/\/ Date(year: 2022, month: 1, day: 31)"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init()-1vm8z","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init()-77axf","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init()-l9xc","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init(_:)-6bmup","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init(_:)-6dgjs","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init(_:)-7xl97"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/digits"]}],"metadata":{"externalID":"s:7Parsing6DigitsV","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Digits"}],"navigatorTitle":[{"kind":"identifier","text":"Digits"}],"symbolKind":"struct","title":"Digits","role":"symbol","roleHeading":"Structure"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/init()-1vm8z":{"kind":"symbol","url":"\/documentation\/parsing\/digits\/init()-1vm8z","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"conformance":{"constraints":[{"code":"Length","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CountingRange","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Conversions.SubstringToUTF8View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init()-1vm8z","title":"init()"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/init(_:)-7xl97":{"kind":"symbol","url":"\/documentation\/parsing\/digits\/init(_:)-7xl97","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Length","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CountingRange","type":"codeVoice"},{"type":"text","text":" and "},{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Conversions.SubstringToUTF8View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init(_:)-7xl97","title":"init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","url":"\/documentation\/parsing\/conversion","role":"symbol","title":"Conversion","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"kind":"symbol","url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"constraints":[{"code":"Length","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CountingRange","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Conversion","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"type":"text","text":", and "},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","title":"ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/ParserPrinter-Implementations":{"kind":"article","url":"\/documentation\/parsing\/digits\/parserprinter-implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/ParserPrinter-Implementations","title":"ParserPrinter Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/Parser-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","title":"Parser Implementations","abstract":[],"url":"\/documentation\/parsing\/digits\/parser-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/Parser-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/digits\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/parse(_:)","title":"parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/init()-l9xc":{"title":"init()","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Length","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CountingRange","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Conversion","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"type":"text","text":"."}]},"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init()-l9xc","url":"\/documentation\/parsing\/digits\/init()-l9xc","role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/init()-77axf":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init()-77axf","url":"\/documentation\/parsing\/digits\/init()-77axf","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Length"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CountingRange"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"InputToBytes"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.Identity<Substring.UTF8View>"},{"text":".","type":"text"}]},"type":"topic","kind":"symbol","title":"init()"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/init(_:)-6bmup":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init(_:)-6bmup","abstract":[],"url":"\/documentation\/parsing\/digits\/init(_:)-6bmup","role":"symbol","title":"init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Length","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Length"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CountingRange"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Conversion"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits/init(_:)-6dgjs":{"title":"init(_:)","abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Length"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CountingRange"},{"type":"text","text":" and "},{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.Identity<Substring.UTF8View>"},{"type":"text","text":"."}]},"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits\/init(_:)-6dgjs","url":"\/documentation\/parsing\/digits\/init(_:)-6dgjs","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":")"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","role":"symbol","type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Digits":{"title":"Digits","abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"units."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Digits"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Digits","url":"\/documentation\/parsing\/digits","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Digits"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/CountingRange":{"type":"topic","title":"CountingRange","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CountingRange"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/CountingRange","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CountingRange"}],"abstract":[],"url":"\/documentation\/parsing\/countingrange"}}}