{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/ParserPrinter-Implementations"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/peek"]}],"sections":[],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}],"title":"Peek","externalID":"s:7Parsing4PeekV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"Peek"}],"modules":[{"name":"Parsing"}],"role":"symbol"},"abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"It lets the upstream parser “peek” into the input without consuming it.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, identifiers (variables, functions, etc.) in Swift allow the first character to be a","type":"text"},{"text":" ","type":"text"},{"text":"letter or underscore, but not a digit, but subsequent characters can be digits. ","type":"text"},{"inlineContent":[{"text":"E.g.","type":"text"}],"type":"emphasis"},{"text":", ","type":"text"},{"type":"codeVoice","code":"foo123"},{"text":" ","type":"text"},{"text":"is a valid identifier, but ","type":"text"},{"type":"codeVoice","code":"123foo"},{"text":" is not. We can create an identifier parser by using ","type":"text"},{"type":"codeVoice","code":"Peek"},{"text":" ","type":"text"},{"text":"to first check if the input starts with a letter or underscore, and if it does, return the","type":"text"},{"text":" ","type":"text"},{"text":"remainder of the input up to the first character that is not a letter, a digit, or an","type":"text"},{"text":" ","type":"text"},{"text":"underscore.","type":"text"}]},{"code":["let identifier = Parse {","  Peek { Prefix(1) { $0.isLetter || $0 == \"_\" } }","  Prefix { $0.isNumber || $0.isLetter || $0 == \"_\" }","}","","try identifier.parse(\"foo123\") \/\/ ✅ \"foo123\"","try identifier.parse(\"_foo123\") \/\/ ✅ \"_foo123\"","try identifier.parse(\"1_foo123\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | 1_foo123","\/\/   | ^ expected 1 element satisfying predicate"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"type":"topic","url":"\/documentation\/parsing\/peek\/parse(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/parse(_:)","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"title":"parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/print(_:into:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/print(_:into:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"((), "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"print(_:into:)","kind":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"url":"\/documentation\/parsing\/peek\/print(_:into:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/init(_:)":{"title":"init(_:)","abstract":[{"type":"text","text":"Construct a parser that runs the given parser, but does not consume any input."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/init(_:)","type":"topic","role":"symbol","url":"\/documentation\/parsing\/peek\/init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/ParserPrinter-Implementations","abstract":[],"type":"topic","url":"\/documentation\/parsing\/peek\/parserprinter-implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/upstream":{"type":"topic","kind":"symbol","title":"upstream","url":"\/documentation\/parsing\/peek\/upstream","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/upstream","role":"symbol","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/Parser-Implementations":{"title":"Parser Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/parsing\/peek\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/Parser-Implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"title":"Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","role":"symbol","type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","role":"symbol","title":"ParserPrinter","kind":"symbol","type":"topic","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"navigatorTitle":[{"text":"Peek","kind":"identifier"}],"title":"Peek","type":"topic","role":"symbol","url":"\/documentation\/parsing\/peek","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek","abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}]}}}