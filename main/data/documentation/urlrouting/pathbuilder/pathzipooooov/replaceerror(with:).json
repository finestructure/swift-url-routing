{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOOV\/replaceError(with:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"ReplaceError","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that never fails."}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}]}],"name":"output"}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Notably this parser is non-throwing:","type":"text"}],"type":"paragraph"},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"URLRouting"}],"title":"replaceError(with:)","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipOOOOOVV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"Parsing","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOOV\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/replaceerror(with:)"]}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOOV/replaceError(with:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOOV\/replaceError(with:)","title":"replaceError(with:)","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/replaceerror(with:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOOV":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOOV","kind":"symbol","role":"symbol","type":"topic","title":"PathBuilder.PathZipOOOOOV","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PathZipOOOOOV","kind":"identifier"}],"navigatorTitle":[{"text":"PathZipOOOOOV","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"http://github.com/pointfreeco/swift-parsing":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOOV/Parser-Implementations":{"title":"Parser Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOOV\/Parser-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/ReplaceError":{"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parsers\/replaceerror","title":"Parsers.ReplaceError","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"role":"symbol"}}}