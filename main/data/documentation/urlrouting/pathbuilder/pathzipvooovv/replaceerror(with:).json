{"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that never fails."}]}]},{"kind":"parameters","parameters":[{"name":"output","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, we could create a parser that parses a plus or minus sign and maps the result to","type":"text"},{"text":" ","type":"text"},{"text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing"},{"inlineContent":[{"text":"Notably this parser is non-throwing:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"extendedModule":"Parsing","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"replaceError(with:)","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVOOOVVV","modules":[{"name":"URLRouting"}],"symbolKind":"method","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOVV\/replaceError(with:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOVV\/Parser-Implementations"]]},"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOOOVV/Parser-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOVV\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/parser-implementations","title":"Parser Implementations","type":"topic","abstract":[]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOOOVV/replaceError(with:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOVV\/replaceError(with:)","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/replaceerror(with:)","title":"replaceError(with:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOOOVV":{"role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOVV","navigatorTitle":[{"kind":"identifier","text":"PathZipVOOOVV"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv","title":"PathBuilder.PathZipVOOOVV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVOOOVV"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"http://github.com/pointfreeco/swift-parsing":{"title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}],"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/ReplaceError":{"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parsers\/replaceerror","title":"Parsers.ReplaceError","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"role":"symbol"}}}