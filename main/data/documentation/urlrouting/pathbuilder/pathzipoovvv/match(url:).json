{"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Parser.match(url:)"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"roleHeading":"Instance Method","externalID":"s:7Parsing6ParserP10URLRoutingAD14URLRequestDataV5InputRtzrlE5match3url6OutputQz10Foundation3URLV_tKF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipOOVVVV","modules":[{"name":"URLRouting"}],"extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method","title":"match(url:)","role":"symbol"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVVV\/match(url:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVVV\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/match(url:)"]}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVVV/match(url:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/match(url:)","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVVV\/match(url:)","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}]},"title":"match(url:)"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVVV":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVVV","abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv","navigatorTitle":[{"text":"PathZipOOVVV","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOOVVV","kind":"identifier"}],"title":"PathBuilder.PathZipOOVVV"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVVV/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVVV\/Parser-Implementations","type":"topic","kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/parser-implementations","abstract":[]},"http://github.com/pointfreeco/swift-parsing":{"url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"text":"Parsing","type":"text"}],"title":"Parsing","type":"link"}}}