{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVOO\/eraseToAnyParser()","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" wrapping this parser.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This form of "},{"inlineContent":[{"text":"type erasure","type":"text"}],"type":"emphasis"},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}]},{"type":"paragraph","inlineContent":[{"text":"When you expose your composed parsers as the ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" type, you can change the underlying","type":"text"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"AnyParser.init"},{"text":".","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"URLRouting"}],"title":"eraseToAnyParser()","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipVOVOOV","extendedModule":"Parsing","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"symbolKind":"method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVOO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVOO\/Parser-Implementations"]]},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParser":{"type":"topic","url":"\/documentation\/parsing\/anyparser","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","role":"symbol","title":"AnyParser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting"},"http://github.com/pointfreeco/swift-parsing":{"titleInlineContent":[{"text":"Parsing","type":"text"}],"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVOO":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVOO","type":"topic","role":"symbol","title":"PathBuilder.PathZipVOVOO","abstract":[],"navigatorTitle":[{"text":"PathZipVOVOO","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVOVOO","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVOO/eraseToAnyParser()":{"role":"symbol","type":"topic","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVOO\/eraseToAnyParser()","kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/erasetoanyparser()","title":"eraseToAnyParser()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVOO/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVOO\/Parser-Implementations","type":"topic","role":"collectionGroup","title":"Parser Implementations","abstract":[],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/parser-implementations","kind":"article"}}}