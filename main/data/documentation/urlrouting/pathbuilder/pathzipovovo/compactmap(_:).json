{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"CompactMap","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/CompactMap"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result of calling the given transformation","type":"text"},{"text":" ","type":"text"},{"text":"with the output of this parser.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that accepts output of this parser as its argument and"},{"type":"text","text":" "},{"type":"text","text":"returns an optional value."}],"type":"paragraph"}],"name":"transform"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method is similar to "},{"code":"Sequence.compactMap","type":"codeVoice"},{"type":"text","text":" in the Swift standard library, as well as"},{"type":"text","text":" "},{"code":"Publisher.compactMap","type":"codeVoice"},{"type":"text","text":" in the Combine framework."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let evenParser = Int.parser().compactMap { $0.isMultiple(of: 2) ? $0 : nil }","","var input = \"124 hello world\"[...]","try evenParser.parse(&input)  \/\/ 124","input                         \/\/ \" hello world\""]},{"inlineContent":[{"type":"text","text":"This parser fails when the provided closure returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". For example, the following parser tries"},{"type":"text","text":" "},{"type":"text","text":"to convert two characters into a hex digit, but fails to do so because "},{"code":"\"GG\"","type":"codeVoice"},{"type":"text","text":" is not a valid"},{"type":"text","text":" "},{"type":"text","text":"hex number:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"GG0000\"[...]","let hex = try Prefix(2).compactMap { Int(String($0), radix: 16) }.parse(&input)","\/\/ error: failed to process \"Int\" from \"GG\"","\/\/  --> input:1:1-2","\/\/ 1 | GG0000","\/\/   | ^^"]},{"level":2,"type":"heading","text":"Printability","anchor":"Printability"},{"inlineContent":[{"code":"Parser.compactMap","type":"codeVoice"},{"type":"text","text":" is "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" printable, as a failable transform operation to some new output"},{"type":"text","text":" "},{"type":"text","text":"does not provide enough information to perform a transformation from that new output back to"},{"type":"text","text":" "},{"type":"text","text":"the old."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you are building a parser-printer, avoid uses of "},{"type":"codeVoice","code":"compactMap"},{"type":"text","text":" and instead use"},{"type":"text","text":" "},{"type":"codeVoice","code":"Parser\/map(_:)-18m9d"},{"type":"text","text":" with a failable "},{"type":"codeVoice","code":"Conversion"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/compactmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVO\/compactMap(_:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"URLRouting"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE10compactMapyAA7ParsersO07CompactD0Vy_xqd__Gqd__Sg6OutputQzclF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipOVOVOV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Parsing","role":"symbol","title":"compactMap(_:)"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVO\/Parser-Implementations"]]},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/CompactMap":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given transformation with the output"},{"type":"text","text":" "},{"type":"text","text":"of its upstream parser."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/CompactMap","title":"Parsers.CompactMap","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CompactMap","kind":"identifier"}],"navigatorTitle":[{"text":"CompactMap","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/compactmap"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOVO/compactMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","text":"CompactMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/compactmap(_:)","role":"symbol","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVO\/compactMap(_:)","title":"compactMap(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOVO":{"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo","title":"PathBuilder.PathZipOVOVO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVO","navigatorTitle":[{"text":"PathZipOVOVO","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOVOVO","kind":"identifier"}],"kind":"symbol"},"http://github.com/pointfreeco/swift-parsing":{"url":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link","titleInlineContent":[{"text":"Parsing","type":"text"}],"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOVO/Parser-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/parser-implementations","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVO\/Parser-Implementations","kind":"article"}}}