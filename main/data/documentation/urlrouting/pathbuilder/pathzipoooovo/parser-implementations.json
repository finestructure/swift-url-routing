{"topicSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/compactMap(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/eraseToAnyParser()","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/filter(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/flatMap(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/map(_:)-19dez","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/map(_:)-6ibev","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/map(_:)-9o71k","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/match(path:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/match(request:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/match(url:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/pipe(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/printing(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/pullback(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/replaceError(with:)"],"title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/Parser-Implementations"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"collectionGroup","modules":[{"name":"URLRouting"}],"title":"Parser Implementations"},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/parser-implementations"]}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/pullback(_:)":{"abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a parser."}],"type":"topic","title":"pullback(_:)","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/pullback(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/pullback(_:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/pipe(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/pipe(_:)","type":"topic","kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/pipe(_:)","title":"pipe(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","text":"Pipe","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/map(_:)-6ibev":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/map(_:)-6ibev","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/map(_:)-6ibev","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"type":"topic","title":"map(_:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/map(_:)-9o71k":{"abstract":[{"type":"text","text":"Returns a parser-printer that transforms the output of this parser with a given conversion."}],"title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","text":"MapConversion","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/map(_:)-9o71k","type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/map(_:)-9o71k"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/match(request:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/match(request:)","title":"match(request:)","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/match(request:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationNetworking10URLRequestV","text":"URLRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/match(url:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/match(url:)","title":"match(url:)","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/match(url:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/flatMap(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/flatMap(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/flatmap(_:)","title":"flatMap(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO":{"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo","title":"PathBuilder.PathZipOOOOVO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO","navigatorTitle":[{"text":"PathZipOOOOVO","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOOOOVO","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/replaceError(with:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/replaceError(with:)","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/replaceerror(with:)","kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"type":"topic","title":"replaceError(with:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/map(_:)-19dez":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","title":"map(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/map(_:)-19dez","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/map(_:)-19dez"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/match(path:)":{"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/match(path:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"URLRequestData"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"match(path:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/match(path:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/printing(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/printing(_:)","abstract":[],"title":"printing(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"printing"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Print","preciseIdentifier":"s:7Parsing7ParsersO5PrintV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/printing(_:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/compactMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/compactMap(_:)","title":"compactMap(_:)","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/compactmap(_:)","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"kind":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/filter(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/filter(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/filter(_:)","title":"filter(_:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVO/eraseToAnyParser()":{"title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVO\/eraseToAnyParser()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/erasetoanyparser()","kind":"symbol","role":"symbol"},"http://github.com/pointfreeco/swift-parsing":{"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}],"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"}}}